# -----
# Shell
# -----

setopt share_history
setopt auto_param_keys
setopt correct
setopt hist_ignore_all_dups

export HISTSIZE=1000
export SAVEHIST=10000

# Aliases
alias relogin='exec $SHELL -l'
alias c='chezmoi'
alias ca='chezmoi add'
alias ce='chezmoi edit'
alias sheldon='EDITOR=vim sheldon'
alias s='EDITOR=vim sheldon'
alias vim='nvim'
alias vi='nvim'
alias cat='bat'
alias find='fd'
alias ls='exa -laG'
alias grep='rg'
alias rm='trash'
alias tree='tree -C -I "node_modules|dist"'
alias diff='colordiff -c'
alias ctags='`brew --prefix`/bin/ctags'
alias pinentry='pinentry-mac'

# ---------------
# Package manager
# ---------------

# Homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"

# sheldon
eval "$(sheldon source)"

# --------
# Terminal
# --------

# WezTerm
if [[ -d {{ .wezterm_path }} ]]; then
  export PATH="{{ .wezterm_path }}:$PATH"
fi

# ----------
# Extensions
# ----------

# Starship
eval "$(starship init zsh)"

# fzf
if [[ ! "$PATH" == */opt/homebrew/opt/fzf/bin* ]]; then
  PATH="${PATH:+${PATH}:}/opt/homebrew/opt/fzf/bin"
fi
source "$(brew --prefix)/opt/fzf/shell/key-bindings.zsh"
[[ $- == *i* ]] && source "/opt/homebrew/opt/fzf/shell/completion.zsh" 2> /dev/null

export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!**/.git/*"'
export FZF_DEFAULT_OPTS="--height 40% --reverse --border=sharp --margin=0,1 --color=light"
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window down:3:hidden:wrap --bind '?:toggle-preview'"
export FZF_CTRL_T_COMMAND='rg --files --hidden --follow --glob "!**/.git/*"'
export FZF_CTRL_T_OPTS="--preview 'bat --color=always --style=header,grid {}' --preview-window=right:60%"

# z
source "$(brew --prefix)/etc/profile.d/z.sh"

# asdf
. /opt/homebrew/opt/asdf/libexec/asdf.sh

# -----------
# Environment
# -----------

# direnv
eval "$(direnv hook zsh)"

# git
# signed commits
export GPG_TTY=$(tty)

# ----------
# Completion
# ----------

# zsh-completions
[ -d $HOME/{{ .zsh_completion_path }} ] && fpath=($HOME/{{ .zsh_completion_path }} $fpath)

# Homebrew
if type brew &>/dev/null
then
  fpath=($(brew --prefix)/share/zsh/site-functions $fpath)
fi

autoload -Uz compinit
compinit -u

# saml2aws
eval "$(saml2aws --completion-script-zsh)"

# ---------
# Languages
# ---------

# Golang
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin

# ---------
# Functions
# ---------

function z-cd() {
  local res=$(z | sort -rn | cut -c 12- | fzf)
  if [ -n "${res}" ]; then
    BUFFER+="cd $res"
    zle accept-line
  else
    zle reset-prompt
    return 1
  fi
}
bindkey "^z" z-cd

function fzf-cd() {
  d=$( \
    fd --type d -H \
    -E .git \
    -E node_modules \
    -E .terragrunt-cache \
    | fzf )

  if [[ $d = "" ]]; then
    zle reset-prompt
    return
  fi

  cd $d
  zle accept-line
}
zle -N fzf-cd
alias fcd='fzf-cd'

function root-cd() {
  export TMP_CDR_DIR=$(pwd)

  while [[ $TMP_CDR_DIR != "/" ]]
  do
    if [ -e "$TMP_CDR_DIR/.git" ];then
      echo $TMP_CDR_DIR
      cd $TMP_CDR_DIR
      break
    else
      export TMP_CDR_DIR=$( dirname $TMP_CDR_DIR )
    fi
  done
  unset TMP_CDR_DIR
}
alias rcd='root-cd'

function fzf-kill() {
  local pid
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
  fi
}
alias fkill='fzf-kill'

function fzf-ghq-cd() {
  local root="$(ghq root)"
  local repo="$(ghq list | fzf --preview="ls -AF --color=always ${root}/{1}")"
  if [ -n "${repo}" ]; then
    cd "${root}/${repo}"
    zle accept-line
  else
    zle reset-prompt
    return 1
  fi
}
zle -N fzf-ghq-cd
bindkey '^v' fzf-ghq-cd

function fzf-git-checkout() {
  local branches branch
  branches=$(git branch --all | grep -v HEAD)
  branch=$(echo "$branches" | fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m)

  if [[ -n "${branch}" ]]; then
    git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
    zle accept-line
  else
    zle reset-prompt
    return 1
  fi 
}
zle -N fzf-git-checkout
bindkey '^x' fzf-git-checkout

function fzf-edit-vim() {
  file="$(
    rg --files --hidden --follow --glob "!**/.git/*" | fzf \
      --preview 'bat  --color=always --style=header,grid {}' --preview-window=right:60%
  )"
  if [[ -n "${file}" ]]; then
    vi "$file"
    print -s "vi $file" # Append to command history
    zle accept-line
  else
    zle reset-prompt
    return 1
  fi
}
zle -N fzf-edit-vim
bindkey '^o' fzf-edit-vim

function fzf-grep-vim() {
  rg_cmd="rg --smart-case --line-number --color=always --trim" 
  selected=$(FZF_DEFAULT_COMMAND=":" \
    fzf --bind="change:top+reload($rg_cmd {q} || true)" \
    --bind="ctrl-l:execute(tmux splitw -h -- nvim +/{q} {1} +{2})" \
    --ansi --phony \
    --delimiter=":" \
    --preview="bat -H {2} --color=always --style=header,grid {1}" \
    --preview-window='down:+{2}-10')

  if [[ -n "$selected" ]]; then
    file=${${(@s/:/)selected}[1]}
    line=${${(@s/:/)selected}[2]}
    vi $file +$line
    print -s "vi $file +$line" # Append to command history
    zle accept-line
  else
    zle reset-prompt
    return 1
  fi
}
zle -N fzf-grep-vim
bindkey '^g' fzf-grep-vim
