return {
	{
		-- Color scheme
		"catppuccin/nvim",
		name = "catppuccin",
		lazy = false,
		priority = 1000,
		config = function()
			require("catppuccin").setup({
				transparent_background = true,
				term_colors = true,
				integrations = {
					gitsigns = true,
					lsp_saga = true,
					mason = true,
					cmp = true,
					treesitter = true,
					aerial = true,
					noice = true,
					notify = true,
					telescope = {
						enabled = true,
					},
				},
			})
			vim.cmd([[colorscheme catppuccin]])
		end,
	},
	{
		-- Extend status line
		"hoob3rt/lualine.nvim",
		event = "VeryLazy",
		dependencies = {
			"catppuccin/nvim",
			"nvim-tree/nvim-web-devicons",
		},
		opts = {
			options = {
				theme = "catppuccin",
			},
			tabline = {
				lualine_a = { "buffers" },
				lualine_b = {},
				lualine_c = {},
				lualine_x = {},
				lualine_y = {},
				lualine_z = {},
			},
			sections = {
				lualine_a = { "mode" },
				lualine_b = {
					"branch",
					"diff",
					{
						"diagnostics",
						sources = { "nvim_diagnostic", "nvim_lsp" },
					},
				},
				lualine_c = {
					{
						"filename",
						path = 3,
						file_status = true,
						shorting_target = 40,
						symbols = {
							modified = " [+]",
							readonly = " [RO]",
							unnamed = "Untitled",
						},
					},
				},
				lualine_x = { "filetype", "encoding" },
				lualine_y = { "progress" },
				lualine_z = { "location" },
			},
			inactive_sections = {
				lualine_a = {},
				lualine_b = {},
				lualine_c = {
					{
						"filename",
						path = 3,
						file_status = true,
						shorting_target = 40,
						symbols = {
							modified = " [+]",
							readonly = " [RO]",
							unnamed = "Untitled",
						},
					},
				},
				lualine_x = {},
				lualine_y = {},
				lualine_z = { "location" },
			},
		},
	},
	{
		-- Improve usability of notifications and command input
		"folke/noice.nvim",
		event = "VeryLazy",
		dependencies = {
			"MunifTanjim/nui.nvim",
			"rcarriga/nvim-notify",
		},
		config = function()
			-- Correct as instructed in the error message generated by nvim-notify
			require("notify").setup({
				background_colour = "#000000",
			})

			require("noice").setup({
				messages = {
					view = "mini",
					view_error = "notify",
					view_warn = "notify",
					view_history = "messages",
					view_search = false,
				},
				presets = {
					command_palette = true,
					long_message_to_split = true,
				},
				routes = {
					{
						filter = { event = "notify", error = false, find = "Client rubocop quit" },
						opts = { skip = true },
					},
				},
			})
		end,
	},
	{
		-- Show preview on quickfix
		"kevinhwang91/nvim-bqf",
		event = "VeryLazy",
		config = function()
			vim.cmd([[
        hi BqfPreviewBorder guifg=#5e81ac ctermfg=71
      ]])

			require("bqf").setup({
				preview = {
					border = { "┏", "━", "┓", "┃", "┛", "━", "┗", "┃" },
				},
			})
		end,
	},
	{
		-- Highlight code chunk according to current cursor position
		"shellRaining/hlchunk.nvim",
		event = "UIEnter",
		config = function()
			require("hlchunk").setup({
				line_num = {
					enable = false,
				},
			})
		end,
	},
}
